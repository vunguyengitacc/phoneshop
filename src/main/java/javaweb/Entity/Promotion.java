package javaweb.Entity;
// Generated Apr 27, 2021, 11:12:42 AM by Hibernate Tools 5.1.10.Final


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Promotion generated by hbm2java
 */
@Entity
@Table(name = "promotion", catalog = "mydb")
public class Promotion implements java.io.Serializable {


	public Promotion(String id, BigDecimal value, Date expiredDate, int type) {
		super();
		this.id = id;
		this.value = value;
		this.expiredDate = expiredDate;
		this.type = type;
		Date temp = new Date();
		this.setCreatedDate(temp);
		this.isExpired = true;
		if(temp.before(this.expiredDate))
			this.isExpired = false;
		else
			this.isExpired = true;
	}

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String id;
	private BigDecimal value;
	private Date expiredDate;
	private Date createdDate;
	private int type;
	private boolean isExpired;
	private Set<Bill> bills = new HashSet<Bill>(0);

	public Promotion() {
		this.expiredDate = new Date();
		this.type = 1;
		Date temp = new Date();
		this.setCreatedDate(temp);
		this.isExpired = true;
	}

	public Promotion(String id, BigDecimal value, Date expired) {
		this.id = id;
		this.value = value;
		this.expiredDate = expired;
		Date temp = new Date();
		this.setCreatedDate(temp);
		if(temp.before(this.expiredDate))
			this.isExpired = false;
		else
			this.isExpired = true;
	}

	public Promotion(String id, BigDecimal value, Date expired, Set<Bill> bills) {
		this.id = id;
		this.value = value;
		this.expiredDate = expired;
		this.bills = bills;
		Date temp = new Date();
		this.setCreatedDate(temp);
		if(temp.before(this.expiredDate))
			this.isExpired = false;
		else
			this.isExpired = true;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "VALUE", nullable = false, precision = 5)
	public BigDecimal getValue() {
		return this.value;
	}

	public void setValue(BigDecimal value) {
		this.value = value;
	}

	@Temporal(TemporalType.TIMESTAMP)	
	@Column(name = "EXPIRED_DATE", nullable = false)
	public Date getExpiredDate() {
		return this.expiredDate;
	}

	public void setExpiredDate(Date expired) {
		this.expiredDate = expired;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "promotion")
	public Set<Bill> getBills() {
		return this.bills;
	}

	public void setBills(Set<Bill> bills) {
		this.bills = bills;
	}

	@Column(name = "TYPE", nullable = false)
	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@Temporal(TemporalType.TIMESTAMP)	
	@Column(name = "CREATED_DATE", nullable = false)
	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}
	
	@Transient
	public boolean getIsExpired() {
		return isExpired;
	}

	public void setIsExpired(boolean isExpired) {
		this.isExpired = isExpired;
	}
	
	public void loadIsExpired() {
		Date validate = new Date();
		if(validate.after(this.expiredDate))
			this.isExpired =true;
		else
			this.isExpired = false;
	}


}
